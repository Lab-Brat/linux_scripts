---
- hosts: all
  become: yes
  vars:
    - user:    'skulikov'
    - pg_conf: '/var/lib/pgsql/data/postgresql.conf'
    - pg_hba:  '/var/lib/pgsql/data/pg_hba.conf'
    - git_app: '/home/{{ user }}/infra-forms'
    - bashrc:  '/home/{{ user }}/.bashrc'
    - env_app: 'app.py'
    - env_mod: 'development'
    - db_user: 'skulikov'
    - db_name: 'infra_forms'
    - db_pass: 'StrongPass'

  tasks:
  - block:
      - name: install pip , git and PostgreSQL
        dnf:
          name: '{{ item }}'
          state: present
        with_items:
          - python-pip
          - python3-psycopg2
          - git
          - postgresql
          - postgresql-server

      - name: install Python libraries
        pip: 
          name: "{{ item }}"
        with_items:
          - Flask
          - flask-migrate
          - SQLAlchemy
          - psycopg2

      - name: clone github repository with forms app
        ansible.builtin.git:
          repo: 'https://github.com/Lab-Brat/flask_masque.git'
          dest: '{{ git_app }}'
          clone: yes

      - name: add FLASK_APP environmental variable
        ansible.builtin.lineinfile:
          path: "{{ bashrc }}"
          line: "export FLASK_APP={{ env_app }}"

      - name: add FLASK_ENV environmental variable
        ansible.builtin.lineinfile:
          path: "{{ bashrc }}"
          line: "export FLASK_ENV={{ env_mod }}"
      
      - name: change ownership of the app folder
        ansible.builtin.file:
          path: '{{ git_app }}'
          state: directory
          recurse: yes
          owner: "{{ user }}"
          group: "{{ user }}"

      - name: "Findout if PostgreSQL is initialized"
        ansible.builtin.stat:
          path: "{{ pg_hba }}"
        register: postgres_data 

      - name: initialize database
        shell: "/usr/bin/postgresql-setup --initdb"
        when: not postgres_data.stat.exists

      - name: start PostgreSQL server
        service: name='postgresql' state=started enabled=yes

      - name: change postgresql.conf
        ansible.builtin.lineinfile:
          path: '{{ pg_conf }}'
          regexp: "listen_addresses = 'localhost'"
          line: "listen_addresses = '*'"

      - name: change pg_hba.conf
        ansible.builtin.lineinfile:
          path: '{{ pg_hba }}'
          regexp: "host    all             all             127.0.0.1/32            ident"
          line: "host    all             all             127.0.0.1/32            trust"

      - name: create app database
        postgresql_db:
          state: present
          name: "{{ db_name }}"
        become: yes
        become_user: postgres
  
      - name: "Create db user"
        postgresql_user:
          state: present
          name: "{{ db_user }}"
          password: "{{ db_pass }}"
        become: yes
        become_user: postgres
  
      - name: "Grant db user access to app db"
        postgresql_privs:
          type: database
          database: "{{ db_name }}"
          roles: "{{ db_user }}"
          grant_option: no
          privs: all
        become: yes
        become_user: postgres

    when: ansible_distribution == 'AlmaLinux'

